# name: test/sql/fusion_combsum.test
# description: test fusion_combsum in flockmtl extension
# group: [fusion_combsum][flockmtl]

# Tests both with optimizers enabled and disabled to see if there are any differences in results
statement ok
PRAGMA enable_verification

# Before we load the extension, this will fail
statement error
SELECT fusion_combsum(1::DOUBLE, 2::DOUBLE);
----
Catalog Error: Scalar Function with name fusion_combsum does not exist!

# Require statement will ensure this test is run with this extension loaded
require flockmtl

# Confirm the extension works and one row output starts with -1
query I
SELECT fusion_combsum(1::DOUBLE, 2::DOUBLE);
----
<REGEX>:.*^-1.*

# Test function with tables of data
statement ok
CREATE TABLE bm25_scores (index_column INTEGER, bm25_score DOUBLE);

statement ok
CREATE TABLE vs_scores (index_column INTEGER, vs_score DOUBLE);

statement ok
INSERT INTO bm25_scores VALUES (1, 10.0), (2, 20.0), (3, 30.0), (4, 40.0), (5, 50.0);

statement ok
INSERT INTO vs_scores VALUES (1, 30.0), (2, 10.0), (3, 2.0), (4, 200.0), (5, 15.0);

query II
SELECT
    COALESCE(b.index_column, e.index_column) AS index_column,
    fusion_combsum(
        b.bm25_score::DOUBLE,
        e.vs_score::DOUBLE
    ) AS ranking
FROM bm25_scores b
FULL OUTER JOIN vs_scores e
ON b.index_column = e.index_column
ORDER BY index_column;
----
1	<REGEX>:.*^5.*
2	<REGEX>:.*^4.*
3	<REGEX>:.*^3.*
4	<REGEX>:.*^1.*
5	<REGEX>:.*^2.*

# Test function with NULL values
statement ok
DELETE FROM bm25_scores; DELETE FROM vs_scores;

statement ok
INSERT INTO bm25_scores VALUES (1, NULL), (2, NULL), (3, NULL), (4, NULL), (5, NULL)

statement ok
INSERT INTO vs_scores VALUES
(1, 21.046906565486452), (2, 20.43271756518423), (3, 21.75739696774139), (4, 20.520761702528056), (5, 21.58813126808257);

query II
SELECT
	COALESCE(b.index_column, e.index_column) AS index_column,
	fusion_combsum(
		b.bm25_score::DOUBLE,
		e.vs_score::DOUBLE
	) AS ranking
FROM bm25_scores b
FULL OUTER JOIN vs_scores e
ON b.index_column = e.index_column
ORDER BY index_column;
----
1	<REGEX>:.*^3.*
2	<REGEX>:.*^5.*
3	<REGEX>:.*^1.*
4	<REGEX>:.*^4.*
5	<REGEX>:.*^2.*